name: build and test
on:
  push:
    branches:
      - master
      - develop

permissions:
  contents: read

jobs:

  buildandtest:
    name: Build and Test on Go ${{matrix.go}}
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        go: [ '1.20', '1.19' ]
    steps:
      - run: |
          sudo docker version
          sudo docker -H unix:///proc/1/root/run/docker.sock version

      - name: Set up Go ${{matrix.go}}
        uses: actions/setup-go@6edd4406fa81c3da01a34fa6f6343087c207a568 # pin@v4
        with:
          go-version: ${{matrix.go}}
        id: go

      - name: Set up podman and start as *cough* daemon
        run: |
          echo 'deb http://download.opensuse.org/repositories/devel:/kubic:/libcontainers:/unstable/xUbuntu_22.04/ /' | sudo tee /etc/apt/sources.list.d/devel:kubic:libcontainers:unstable.list
          curl -fsSL https://download.opensuse.org/repositories/devel:kubic:libcontainers:unstable/xUbuntu_22.04/Release.key | gpg --dearmor | sudo tee /etc/apt/trusted.gpg.d/devel_kubic_libcontainers_unstable.gpg > /dev/null
          sudo apt update
          sudo apt install podman
          sudo systemctl enable podman.socket
          sudo systemctl start podman.socket

      - name: Set up podman dev dependencies
        run: |
          sudo apt-get -y install \
            build-essential pkg-config libbtrfs-dev libgpgme-dev

      - name: Check out code into the Go module directory
        uses: actions/checkout@8f4b7f84864484a7bf31766abe9204da3cbe65b3 # pin@v3

      - name: Get dependencies
        run: go get -v -t -d ./...

      - name: Test Go packages as root
        run: go test -v -p 1 -tags
          podman,exclude_graphdriver_btrfs,exclude_graphdriver_devicemapper,libdm_no_deferred_remove
          -exec sudo ./...

      - name: Test Go packages as ordinary user
        run: go test -v -p 1
          -tags,exclude_graphdriver_btrfs,exclude_graphdriver_devicemapper,libdm_no_deferred_remove
          podman ./...

  testwebapp:
    if: ${{ false }} # disable for now

    name: Test web ui of lxkns service
    runs-on: ubuntu-latest
    needs: buildandtest
    strategy:
      matrix:
        go: [ '1.20' ]
    steps:
      - name: Set up Go ${{matrix.go}}
        uses: actions/setup-go@6edd4406fa81c3da01a34fa6f6343087c207a568 # pin@v3
        with:
          go-version: ${{matrix.go}}
        id: go

      - name: Check out code
        uses: actions/checkout@8f4b7f84864484a7bf31766abe9204da3cbe65b3 # pin@v3
        with:
          fetch-depth: 0

      - name: Test WebUI units and end-to-end
        run: (cd web/lxkns && yarn install) && make citestapp

      - name: upload cypress test failure screenshots
        uses: actions/upload-artifact@82c141cc518b40d92cc801eee768e7aafc9c2fa2 # pin@v2
        if: ${{ failure() }}
        with:
          name: cypress-screenshots
          path: cypress/screenshots
